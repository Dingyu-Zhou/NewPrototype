import { makeExecutableSchema } from 'graphql-tools'

import { resolvers } from './resolvers'

const typeDefs = `
  scalar Date

  type User {
    id: ID!
    jwt: String!
    username: String!
    nickname: String!
  }

  type Article {
    id: ID!
    author: User!
    title: String!
    body: String!
    abstract: String!
    createdAt: Date!
    updatedAt: Date!
  }

  input ArticleFilter {
    authorUsername: String
  }

  type Query {
    articles (filter: ArticleFilter): [Article]!
    article (id: ID!): Article
  }

  type Mutation {
    createUser (username: String!, email: String!, nickname: String!, password: String!): User
    authenticateUser (username: String!, password: String!): User

    saveArticle (userId: ID!, articleId: ID, title: String!, body: String!, bodyText: String!, abstract: String): Article
    deleteArticle (id: ID!): Article
  }
`

/**
  * This is a GraphQL schema used by the "graphql-server-express".
  * It is generated by the 'graphql-tools'.
  * @see http://dev.apollodata.com/tools/graphql-server/
  *
  * @access public
  * @type {object}
  */
export const schema = makeExecutableSchema({typeDefs, resolvers})
